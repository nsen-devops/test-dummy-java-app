name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Sonar Code Quality Check
        if: always()
        run: echo "Running SonarQube scan"
        # Add actual SonarQube analysis command here

      - name: Nexus Vulnerabilities Scan
        if: always()
        run: echo "Running Nexus IQ scan"
        # Add actual Nexus IQ scan command here

      - name: Static Application Security Testing (SAST)
        if: always()
        run: echo "Running SAST scan"
        # Add actual SAST tool command here

      - name: Dynamic Application Security Testing (DAST)
        if: always()
        run: echo "Running DAST scan"
        # Add actual DAST tool command here

      - name: Build Docker image
        if: always()
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-app:${{ github.sha }} .
          echo ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }} | docker login -u _json_key --password-stdin https://gcr.io

      - name: Push Docker image to Google Artifact Registry
        if: always()
        run: |
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-app:${{ github.sha }}

      - name: Container Image Scan
        if: always()
        run: echo "Scanning container image"
        # Add actual container scanning command here

      - name: Create Helm package
        if: always()
        run: |
          helm package .
          echo "Helm package created"

      - name: Deploy to GKE using Helm
        if: always()
        run: |
          echo "Deploying to GKE using Helm charts"
          helm upgrade --install my-app ./my-app --namespace default --set image.tag=${{ github.sha }}
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}

      - name: User Approval
        if: always()
        run: |
          read -p "Do you want to proceed with the deployment? (yes/no) " choice
          if [[ $choice != "yes" ]]; then
            echo "Deployment aborted by user."
            exit 1
          fi
