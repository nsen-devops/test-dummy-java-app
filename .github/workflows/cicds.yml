name: CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      deploy:
        description: 'do you want to deploy the changes to cluster?'     
        required: true
        default: 'no'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Compile Code
        run: mvn compile
        continue-on-error: false

      - name: Build Code
        run: mvn package
        continue-on-error: false

      - name: Run Unit Tests
        run: mvn test
        continue-on-error: false

      - name: Static code quality check
        run: bash scan-scripts/sonarqube.sh
        continue-on-error: false

      - name: Build Docker image
        run: docker build -t my-app:latest .
        continue-on-error: false

      - name: Push to Google Artifact Registry
        env: 
          GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        run: |
          echo $GCP_SERVICE_ACCOUNT_KEY | docker login -u _json_key --password-stdin https://gcr.io
          docker tag my-app:latest gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-app:${{ github.sha }}
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-app:${{ github.sha }}
        continue-on-error: false

      - name: Package application with Helm
        run: |
          helm create my-app
          sed -i 's|repository: nginx|repository: gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-app|' my-app/values.yaml
          sed -i 's/tag: ""/tag: "${{ github.sha }}"/' my-app/values.yaml
        continue-on-error: false

      # - name: User confirmation for deployment
      #   id: prompt
      #   run: |
      #     echo "::set-output name=deploy::$(bash -c 'read -p "Proceed with deployment? (yes/no): " yn; echo $yn')"
      #   continue-on-error: false

      - name: Deploy to Google Kubernetes Engine
        if: ${{ inputs.deploy }} == 'yes'
        env: 
          GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        run: |
          echo $GCP_SERVICE_ACCOUNT_KEY | gcloud auth activate-service-account --key-file=-
          sudo apt-get install google-cloud-sdk-gke-gcloud-auth-plugin
          gcloud container clusters get-credentials my-cluster --zone us-central1-c --project ${{ secrets.GCP_PROJECT_ID }}
          helm upgrade --install my-release ./my-app
        continue-on-error: false
